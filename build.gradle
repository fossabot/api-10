buildscript {
    ext {
        kotlinVersion = '1.3.0'
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        maven { url 'http://mirrors.163.com/maven/repository/maven-public/' }
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("com.github.ben-manes:gradle-versions-plugin:0.20.0")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.ben-manes.versions'

group = 'com.dongfg.project'
version = '2.1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }

    doLast {
        def metadata = copySpec {
            from 'build/tmp/kapt3/classes/main/META-INF/spring-configuration-metadata.json'
        }
        copy {
            with metadata
            into 'out/production/classes/META-INF/'
        }
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

noArg {
    annotation("org.springframework.boot.context.properties.ConfigurationProperties")
    invokeInitializers = true
}

bootJar {
    archiveName 'dongfg-api.jar'
    launchScript()
}

repositories {
    maven { url 'http://mirrors.163.com/maven/repository/maven-public/' }
    jcenter()
}

ext {
    springCloudVersion = 'Finchley.SR2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    compile("com.fasterxml.jackson.module:jackson-modules-java8:2.9.7")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-json-org:2.9.7")
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")

    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.session:spring-session-data-redis')

    compile('mysql:mysql-connector-java:8.0.13')
    compile('io.jsonwebtoken:jjwt:0.9.1')
    compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')

    compile('com.graphql-java:graphql-spring-boot-starter:5.0.2')
    compile('com.graphql-java:graphiql-spring-boot-starter:5.0.2')
    compile('com.graphql-java:graphql-java-tools:5.2.4')

    compile('io.github.microutils:kotlin-logging:1.6.10')
    compile('com.yunpian.sdk:yunpian-java-sdk:1.2.7')
    compile('com.warrenstrange:googleauth:1.2.0')
    compile('com.google.guava:guava:27.0-jre')

    compile('org.jsoup:jsoup:1.11.3')

    kapt('org.springframework.boot:spring-boot-configuration-processor')

    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
}